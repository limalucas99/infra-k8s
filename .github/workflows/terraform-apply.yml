name: Terraform Apply (Kubernetes Infra)

on:
  pull_request:
    branches: [ main ]

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # AWS credentials
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region:            us-east-1

      - uses: hashicorp/setup-terraform@v3
        with: { terraform_version: 1.6.0 }

      - name: Terraform Init
        run: terraform init -input=false

      # Importa cluster / nodegroup se já existirem
      - name: Import cluster & nodegroup if missing
        run: |
          terraform state list | grep -q '^aws_eks_cluster\.eks$' || \
            terraform import aws_eks_cluster.eks academy-cluster || true
          terraform state list | grep -q '^aws_eks_node_group\.node_group$' || \
            terraform import aws_eks_node_group.node_group academy-cluster:academy-node-group || true

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan

      - name: Terraform Apply
        id: apply
        run: terraform apply -input=false -auto-approve tfplan
        continue-on-error: true  

      # Rollback: destrói tudo se o apply falhar!!
      - name: Terraform Destroy (rollback)
        if: steps.apply.outcome == 'failure'
        run: terraform destroy -auto-approve

